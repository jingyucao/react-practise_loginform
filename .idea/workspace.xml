<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="86760987-bc6a-4b87-b34c-aef392857ac2" name="Changes" comment="" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/components/MainHeader/MainHeader.js" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/components/MainHeader/Navigation.js" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/components/Home/Home.js" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/components/UI/Input/Input.js" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/components/store/auth-context.js" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/components/Login/Login.js" root0="FORCE_HIGHLIGHTING" />
    <setting file="file://$PROJECT_DIR$/src/App.js" root0="FORCE_HIGHLIGHTING" />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectId" id="22xkBFlEc3OkEvJirsHDVnlUyDZ" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
    <option name="showMembers" value="true" />
  </component>
  <component name="PropertiesComponent">
    <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
    <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$/public" />
    <property name="node.js.detected.package.eslint" value="true" />
    <property name="node.js.detected.package.standard" value="true" />
    <property name="node.js.detected.package.tslint" value="true" />
    <property name="node.js.selected.package.eslint" value="(autodetect)" />
    <property name="node.js.selected.package.standard" value="" />
    <property name="node.js.selected.package.tslint" value="(autodetect)" />
    <property name="nodejs_interpreter_path" value="node" />
    <property name="nodejs_package_manager_path" value="npm" />
    <property name="settings.editor.selected.configurable" value="settings.javascript.linters.eslint" />
    <property name="vue.rearranger.settings.migration" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/public" />
      <recent name="$PROJECT_DIR$/src" />
    </key>
  </component>
  <component name="RunManager" selected="npm.npm start">
    <configuration name="Debug Application" type="JavascriptDebugType" uri="http://localhost:3000">
      <method v="2" />
    </configuration>
    <configuration name="npm start" type="js.build_tools.npm">
      <package-json value="$PROJECT_DIR$/package.json" />
      <command value="run" />
      <scripts>
        <script value="start" />
      </scripts>
      <node-interpreter value="project" />
      <envs />
      <method v="2" />
    </configuration>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="86760987-bc6a-4b87-b34c-aef392857ac2" name="Changes" comment="" />
      <created>1640786488651</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1640786488651</updated>
      <workItem from="1640786489737" duration="6553000" />
      <workItem from="1640884682552" duration="2500000" />
      <workItem from="1641418092286" duration="81000" />
      <workItem from="1641418186914" duration="2241000" />
      <workItem from="1641420448835" duration="7549000" />
      <workItem from="1641740287755" duration="6840000" />
      <workItem from="1641753909787" duration="356000" />
      <workItem from="1641754390810" duration="1057000" />
      <workItem from="1641755469366" duration="402000" />
      <workItem from="1641755985294" duration="1314000" />
      <workItem from="1641757678666" duration="269000" />
      <workItem from="1641758834069" duration="195000" />
      <workItem from="1641759042693" duration="676000" />
      <workItem from="1641759866190" duration="361000" />
      <workItem from="1641760313503" duration="176000" />
      <workItem from="1641760505051" duration="113000" />
      <workItem from="1641760631193" duration="5397000" />
      <workItem from="1641769957916" duration="78000" />
    </task>
    <task id="LOCAL-00001" summary="Starting new Project with a login Function, now it is just a dummy App, I will learn how to use useEffect, Reducer and Context to make the login similar to real life Project">
      <created>1640788591050</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1640788591050</updated>
    </task>
    <task id="LOCAL-00002" summary="using useEffect in App.js, so if we store our input in local, it will still show after we refresh the page. using useEffect in Login.js, so it has a cleaner Code and make sure that the keystroke will NOT cause a call everything we onChange">
      <created>1640811865225</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1640811865225</updated>
    </task>
    <task id="LOCAL-00003" summary="use useReducer to handle more complex state">
      <created>1641507424890</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1641507424890</updated>
    </task>
    <task id="LOCAL-00004" summary="use useContext to create a cleaner demo">
      <created>1641749406874</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1641749406874</updated>
    </task>
    <task id="LOCAL-00005" summary="using a custom Context Provider Component">
      <created>1641754329438</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1641754329438</updated>
    </task>
    <task id="LOCAL-00006" summary="use useImperativeHandler and forwardRef to expose functionalities from a React Component to its parent Component to then use the Component in the parent Component through refs">
      <created>1641768675259</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1641768675259</updated>
    </task>
    <task id="LOCAL-00007" summary="Package.json">
      <created>1641769883028</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1641769883028</updated>
    </task>
    <option name="localTasksCounter" value="8" />
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <MESSAGE value="Starting new Project with a login Function, now it is just a dummy App, I will learn how to use useEffect, Reducer and Context to make the login similar to real life Project" />
    <MESSAGE value="using useEffect in App.js, so if we store our input in local, it will still show after we refresh the page. using useEffect in Login.js, so it has a cleaner Code and make sure that the keystroke will NOT cause a call everything we onChange" />
    <MESSAGE value="use useReducer to handle more complex state" />
    <MESSAGE value="use useContext to create a cleaner demo" />
    <MESSAGE value="using a custom Context Provider Component" />
    <MESSAGE value="use useImperativeHandler and forwardRef to expose functionalities from a React Component to its parent Component to then use the Component in the parent Component through refs" />
    <MESSAGE value="Package.json" />
    <option name="LAST_COMMIT_MESSAGE" value="Package.json" />
  </component>
  <component name="XSLT-Support.FileAssociations.UIState">
    <expand />
    <select />
  </component>
</project>